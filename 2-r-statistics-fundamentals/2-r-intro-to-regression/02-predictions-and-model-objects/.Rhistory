late_shipments <- read_csv("/Telecom_Customer_Churn/telecom_customer_churn.csv")
install.pakkages("tidyverse")
install.packages("tidyverse")
# Read an FST file
customer_churn <- read_csv("/Telecom_Customer_Churn/telecom_customer_churn.csv")
# Read an FST file
customer_churn <- read.csv("/Telecom_Customer_Churn/telecom_customer_churn.csv")
# Read an FST file
customer_churn <- read.csv("Telecom_Customer_Churn/telecom_customer_churn.csv")
# Read an FST file
customer_churn <- read.csv("telecom_customer_churn.csv")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(dplyr) # for functions
library(tidyverse)
# Read an FST file
customer_churn <- read.csv("telecom_customer_churn.csv")
# Read an FST file
customer_churn <- read.csv("telecom_customer_churn")
# Read an FST file
customer_churn <- read.csv("C:\Users\sclau\Documents\01-upskill\DataCamp\datacamp-notes\Statistics Fundamentals with R\telecom_customer_churn")
# Read an FST file
customer_churn <- read.csv("\Users\sclau\Documents\01-upskill\DataCamp\datacamp-notes\Statistics Fundamentals with R\telecom_customer_churn")
# Read an FST file
customer_churn <- read.csv("C:/Users/sclau/Documents/01-upskill/DataCamp/datacamp-notes/Statistics Fundamentals with R/telecom_customer_churn.csv")
#Ho: The mean Total Revenue is the same for those that Churned and those that Stayed
#Ha: The mean Total Revenue is greater for those that Stayed and those that Churned
#HO:  MuStayed = MuChurned
#Ha:  MuStayed > MuChurned
install.packages("dplyr")
install.packages("tidyverse")
library(dplyr) # for functions
library(tidyverse)
# Read the customer churn csv file
customer_churn <- read.csv("telecom_customer_churn.csv")
# Install packages
install.packages("dplyr")
install.packages("tidyverse")
install.packages("ggplot2")
library(tidyverse) # for data tidying
sp500 <- read.csv("S&P 500 Stock Prices 2014-2017.csv")
wd <- getwd()
setwd(wd)
# Mean and Median
# Read the S&P 500 csv file
sp500 <- read.csv("S&P 500 Stock Prices 2014-2017.csv")
install.packages("tidyverse")
install.packages("dplyr")
install.packages("ggplot2")
library(tidyverse) # for data tidying
library(dplyr) # for tabular data manipulation
library(ggplot2) # for visualization
wd <- getwd()
setwd(wd)
wd <- getwd()
boston_real_estate <- read.csv("archive/data.csv")
for handling date fields
wd <- getwd()
setwd("C:/Users/sclau/Documents/r-stats-programming-workshop/2-r-statistics-fundamentals/2-r-intro-to-regression/02-predictions-and-model-objects")
boston_real_estate <- read.csv("archive/data.csv")
# Create a tibble with n_convenience column from zero to ten
explanatory_data <- tibble(
ec_distance = 0:10
)
library(tidyverse) # for data tidying
library(dplyr) # for tabular data manipulation
library(magrittr)
library(ggplot2) # for visualization
library(lubridate) # for handling date fields
# Create a tibble with n_convenience column from zero to ten
explanatory_data <- tibble(
ec_distance = 0:10
)
View(explanatory_data)
View(boston_real_estate)
explanatory_data <- tibble(
ec_distance = 0:13
)
View(boston_real_estate)
View(boston_real_estate)
mdl_dis_vs_rad <- lm(DIS ~ RAD + 0, data = boston_real_estate)
# Create a tibble with indedx of accessibility to radial highways column from zero to 12
explanatory_data <- tibble(
rad = 0:12
)
mdl_dis_vs_rad <- lm(DIS ~ RAD + 0, data = boston_real_estate)
# Edit this, so predictions are stored in prediction_data
prediction_data <- explanatory_data %>%
mutate(
dis = predict(mdl_dis_vs_rad, explanatory_data)
)
boston_real_estate <- read.csv("archive/data.csv")
# Create a tibble with indedx of accessibility to radial highways column from zero to 12
explanatory_data <- tibble(
rad = 0:12
)
mdl_dis_vs_rad <- lm(DIS ~ RAD + 0, data = boston_real_estate)
# Edit this, so predictions are stored in prediction_data
prediction_data <- explanatory_data %>%
mutate(
dis = predict(mdl_dis_vs_rad, explanatory_data)
)
glimpse(boston_real_estate)
mdl_dis_vs_rad <- lm(DIS ~ RAD + 0, data = boston_real_estate)
# Edit this, so predictions are stored in prediction_data
prediction_data <- explanatory_data %>%
mutate(
dis = predict(mdl_dis_vs_rad, explanatory_data)
)
explanatory_data <- tibble(
RAD = 0:12
)
mdl_dis_vs_rad <- lm(DIS ~ RAD + 0, data = boston_real_estate)
# Edit this, so predictions are stored in prediction_data
prediction_data <- explanatory_data %>%
mutate(
dis = predict(mdl_dis_vs_rad, explanatory_data)
)
# See the result
prediction_data
# Add to the plot
ggplot(boston_real_estate, aes(rad, dis)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
# Add a point layer of prediction data, colored yellow
geom_point(data = prediction_data, color = "yellow")
# Add to the plot
ggplot(boston_real_estate, aes(RAD, dis)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
# Add a point layer of prediction data, colored yellow
geom_point(data = prediction_data, color = "yellow")
ggplot(boston_real_estate, aes(RAD, DIS)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
# Add a point layer of prediction data, colored yellow
geom_point(data = prediction_data, color = "yellow")
# Create a tibble with index of accessibility to radial highways column from zero to 12
explanatory_data <- tibble(
RAD = 0:12
)
mdl_dis_vs_rad <- lm(DIS ~ RAD + 0, data = boston_real_estate)
# Edit this, so predictions are stored in prediction_data
prediction_data <- explanatory_data %>%
mutate(
DIS = predict(mdl_dis_vs_rad, explanatory_data)
)
# See the result
prediction_data
prediction_data
# Add to the plot
ggplot(boston_real_estate, aes(RAD, DIS)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
# Add a point layer of prediction data, colored yellow
geom_point(data = prediction_data, color = "yellow")
# Add to the plot
ggplot(boston_real_estate, aes(RAD, DIS)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
# Add a point layer of prediction data, colored yellow
geom_point(data = prediction_data, color = "yellow")
# Create a tibble with index of accessibility to DISial highways column from zero to 12
explanatory_data <- tibble(
DIS = 0:12
)
mdl_TAX_vs_DIS <- lm(TAX ~ DIS + 0, data = boston_real_estate)
# Edit this, so predictions are stored in prediction_data
prediction_data <- explanatory_data %>%
mutate(
TAX = predict(mdl_TAX_vs_DIS, explanatory_data)
)
# See the result
prediction_data
# Add to the plot
ggplot(boston_real_estate, aes(DIS, TAX)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
# Add a point layer of prediction data, colored yellow
geom_point(data = prediction_data, color = "yellow")
# Create a tibble with index of accessibility to AGEial highways column from zero to 12
explanatory_data <- tibble(
AGE = 0:12
)
mdl_TAX_vs_AGE <- lm(TAX ~ AGE + 0, data = boston_real_estate)
# Edit this, so predictions are stored in prediction_data
prediction_data <- explanatory_data %>%
mutate(
TAX = predict(mdl_TAX_vs_AGE, explanatory_data)
)
# See the result
prediction_data
# Add to the plot
ggplot(boston_real_estate, aes(AGE, TAX)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
# Add a point layer of prediction data, colored yellow
geom_point(data = prediction_data, color = "yellow")
# Create a tibble with index of accessibility to AGEial highways column from zero to 12
explanatory_data <- tibble(
AGE = 0:100
)
mdl_TAX_vs_AGE <- lm(TAX ~ AGE + 0, data = boston_real_estate)
# Edit this, so predictions are stored in prediction_data
prediction_data <- explanatory_data %>%
mutate(
TAX = predict(mdl_TAX_vs_AGE, explanatory_data)
)
# See the result
prediction_data
# Add to the plot
ggplot(boston_real_estate, aes(AGE, TAX)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
# Add a point layer of prediction data, colored yellow
geom_point(data = prediction_data, color = "yellow")
# Create a tibble with index of accessibility to DISial highways column from zero to 12
explanatory_data <- tibble(
DIS = 0:100
)
mdl_TAX_vs_DIS <- lm(TAX ~ DIS + 0, data = boston_real_estate)
# Edit this, so predictions are stored in prediction_data
prediction_data <- explanatory_data %>%
mutate(
TAX = predict(mdl_TAX_vs_DIS, explanatory_data)
)
# See the result
prediction_data
# Add to the plot
ggplot(boston_real_estate, aes(DIS, TAX)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
# Add a point layer of prediction data, colored yellow
geom_point(data = prediction_data, color = "yellow")
explanatory_data <- tibble(
DIS = 0:20
)
mdl_TAX_vs_DIS <- lm(TAX ~ DIS + 0, data = boston_real_estate)
# Edit this, so predictions are stored in prediction_data
prediction_data <- explanatory_data %>%
mutate(
TAX = predict(mdl_TAX_vs_DIS, explanatory_data)
)
# See the result
prediction_data
# Add to the plot
ggplot(boston_real_estate, aes(DIS, TAX)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
# Add a point layer of prediction data, colored yellow
geom_point(data = prediction_data, color = "yellow")
explanatory_data <- tibble(
AGE = 0:100
)
mdl_TAX_vs_AGE <- lm(TAX ~ AGE + 0, data = boston_real_estate)
# Edit this, so predictions are stored in prediction_data
prediction_data <- explanatory_data %>%
mutate(
TAX = predict(mdl_TAX_vs_AGE, explanatory_data)
)
# See the result
prediction_data
# Add to the plot
ggplot(boston_real_estate, aes(AGE, TAX)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
# Add a point layer of prediction data, colored yellow
geom_point(data = prediction_data, color = "yellow")
coefficients(mdl_TAX_vs_AGE)
source("C:/Users/sclau/Documents/r-stats-programming-workshop/2-r-statistics-fundamentals/2-r-intro-to-regression/02-predictions-and-model-objects/02-predictions-and-model-objects.R", echo=TRUE)
install.packages("magrittr")
install.packages("magrittr")
coefficients(mdl_TAX_vs_AGE)
fitted(mdl_TAX_vs_AGE)
residuals(mdl_TAX_vs_AGE)
summary(mdl_TAX_vs_AGE)
# Get the coefficients of mdl_TAX_vs_AGE
coeffs <- coefficients(mdl_TAX_vs_AGE)
# Get the intercept
intercept <- coeffs[1]
# Get the slope
slope <- coeffs[2]
explanatory_data %>%
mutate(
# Manually calculate the predictions
TAX = intercept + slope * AGE
)
library(magrittr)
# Get the coefficients of mdl_TAX_vs_AGE
coeffs <- coefficients(mdl_TAX_vs_AGE)
# Get the intercept
intercept <- coeffs[1]
# Get the slope
slope <- coeffs[2]
explanatory_data %>%
mutate(
# Manually calculate the predictions
TAX = intercept + slope * AGE
)
library(tidyverse) # for data tidying
library(dplyr) # for tabular data manipulation
library(magrittr)
library(ggplot2) # for visualization
library(lubridate) # for handling date fields
# Get the coefficients of mdl_TAX_vs_AGE
coeffs <- coefficients(mdl_TAX_vs_AGE)
# Get the intercept
intercept <- coeffs[1]
# Get the slope
slope <- coeffs[2]
explanatory_data %>%
mutate(
# Manually calculate the predictions
TAX = intercept + slope * AGE
)
# Compare to the results from predict()
predict(mdl_TAX_vs_AGE, explanatory_data)
# Get the coefficient-level elements of the model
tidy(mdl_price_vs_conv)
install.packages("tidyverse")
install.packages("dplyr")
install.packages("magrittr")
install.packages("ggplot2")
install.packages("lubridate")
install.packages("broom")
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
library(tidyverse) # for data tidying
library(dplyr) # for tabular data manipulation
library(magrittr)
library(ggplot2) # for visualization
library(lubridate) # for handling date fields
library(broom)
# Get the coefficient-level elements of the model
tidy(mdl_TAX_vs_AGE)
# Get the observation-level elements of the model
augment(mdl_TAX_vs_AGE)
# Get the model-level elements of the model
glance(mdl_TAX_vs_AGE)
library(tidyverse) # for data tidying
library(dplyr) # for tabular data manipulation
library(magrittr)
library(ggplot2) # for visualization
library(lubridate) # for handling date fields
library(broom)
wd <- getwd()
setwd("C:/Users/sclau/Documents/r-stats-programming-workshop/2-r-statistics-fundamentals/2-r-intro-to-regression/02-predictions-and-model-objects")
boston_real_estate <- read.csv("archive/data.csv")
glimpse(boston_real_estate)
ggplot(boston_real_estate, aes(DIS, TAX)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
ggplot(boston_real_estate, aes(sqrt(DIS), TAX)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
ggplot(boston_real_estate, aes(DIS, TAX)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
ggplot(boston_real_estate, aes(sqrt(DIS), TAX)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
ggplot(boston_real_estate, aes(RAD, TAX)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
# Edit so x-axis is square root of dist_to_mrt_m
ggplot(boston_real_estate, aes(sqrt(RAD), TAX)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
ggplot(boston_real_estate, aes(RAD, TAX)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
ggplot(boston_real_estate, aes(sqrt(RAD), TAX)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
# Edit so x-axis is square root of dist_to_mrt_m
ggplot(boston_real_estate, aes(RAD ^ 3, TAX)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
ggplot(boston_real_estate, aes(RAD ^ 1/3, TAX)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
ggplot(boston_real_estate, aes(RM, TAX)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
ggplot(boston_real_estate, aes(RM ^ 2, TAX)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
ggplot(boston_real_estate, aes(RAD, TAX)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
# Edit so x-axis is square root of dist_to_mrt_m
ggplot(boston_real_estate, aes(sqrt(RAD), TAX)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
# Run a linear regression of price_twd_msq vs. square root of dist_to_mrt_m using taiwan_real_estate
mdl_TAX_vs_RAD <- lm(
tax ~ sqrt(RAD),
data = boston_real_estate
)
mdl_TAX_vs_RAD <- lm(
TAX ~ sqrt(RAD),
data = boston_real_estate
)
# See the result
mdl_TAX_vs_RAD
# Run a linear regression of price_twd_msq vs. square root of dist_to_mrt_m using taiwan_real_estate
mdl_TAX_vs_RAD <- lm(
TAX ~ sqrt(RAD),
data = boston_real_estate
)
explanatory_data <- tibble(
RAD = seq(0, 80, 10) ^ 2
)
# Use mdl_price_vs_dist to predict explanatory_data
prediction_data <- explanatory_data %>%
mutate(
TAX = predict(mdl_TAX_vs_RAD, explanatory_data)
)
# See the result
prediction_data
mdl_TAX_vs_RAD <- lm(
TAX ~ sqrt(RAD),
data = boston_real_estate
)
explanatory_data <- tibble(
dist_to_mrt_m = seq(0, 80, 10) ^ 2
)
prediction_data <- explanatory_data %>%
mutate(
TAX = predict(mdl_TAX_vs_RAD, explanatory_data)
)
mdl_TAX_vs_RAD <- lm(
TAX ~ sqrt(RAD),
data = boston_real_estate
)
explanatory_data <- tibble(
dist_to_mrt_m = seq(0, 80, 10) ^ 2
)
prediction_data <- explanatory_data %>%
mutate(
TAX = predict(mdl_TAX_vs_RAD, explanatory_data)
)
mdl_TAX_vs_RAD <- lm(
TAX ~ sqrt(RAD),
data = boston_real_estate
)
explanatory_data <- tibble(
RAD = seq(0, 80, 10) ^ 2
)
# Use mdl_TAX_vs_RAD to predict explanatory_data
prediction_data <- explanatory_data %>%
mutate(
TAX = predict(mdl_TAX_vs_RAD, explanatory_data)
)
# See the result
prediction_data
mdl_TAX_vs_RAD <- lm(
TAX ~ sqrt(RAD),
data = boston_real_estate
)
explanatory_data <- tibble(
RAD = seq(0, 80, 10) ^ 2
)
# Use mdl_TAX_vs_RAD to predict explanatory_data
prediction_data <- explanatory_data %>%
mutate(
TAX = predict(mdl_TAX_vs_RAD, explanatory_data)
)
ggplot(boston_real_estate, aes(sqrt(RAD), TAX)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
# Add points from prediction_data, colored green, size 5
geom_point(data = prediction_data, color = "green", size = 5)
mdl_TAX_vs_RAD <- lm(
TAX ~ sqrt(RAD),
data = boston_real_estate
)
explanatory_data <- tibble(
RAD = seq(0, 10, 10) ^ 2
)
# Use mdl_TAX_vs_RAD to predict explanatory_data
prediction_data <- explanatory_data %>%
mutate(
TAX = predict(mdl_TAX_vs_RAD, explanatory_data)
)
ggplot(boston_real_estate, aes(sqrt(RAD), TAX)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
# Add points from prediction_data, colored green, size 5
geom_point(data = prediction_data, color = "green", size = 5)
mdl_TAX_vs_RAD <- lm(
TAX ~ sqrt(RAD),
data = boston_real_estate
)
explanatory_data <- tibble(
RAD = seq(0, 20, 10) ^ 2
)
# Use mdl_TAX_vs_RAD to predict explanatory_data
prediction_data <- explanatory_data %>%
mutate(
TAX = predict(mdl_TAX_vs_RAD, explanatory_data)
)
ggplot(boston_real_estate, aes(sqrt(RAD), TAX)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
# Add points from prediction_data, colored green, size 5
geom_point(data = prediction_data, color = "green", size = 5)
