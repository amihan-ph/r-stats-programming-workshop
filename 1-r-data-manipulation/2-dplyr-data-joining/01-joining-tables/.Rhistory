demo()
install.packages(c('quantmod','ff','foreign','R.matlab'),dependency=T)
suppressPackageStartupMessages(library(tidyverse, dplyr))
data("ToothGrowth")
head(ToothGrowth)
str(ToothGrowth)
hist(ToothGrowth$len)
# Shapiro-Wilk normality test
#H0: data are normally distributed
shapiro.test(ToothGrowth$len) #data are normally distributed
view(ToothGrowth)
data("ToothGrowth")
head(ToothGrowth)
str(ToothGrowth)
View(ToothGrowth)
data("ToothGrowth")
head(ToothGrowth)
library(dplyr) # for functions
install.packages("dplyr")
library("dplyr", lib.loc="C:/Users/sclau/anaconda3/envs/rstudio/lib/R/library")
library("dbplyr", lib.loc="C:/Users/sclau/anaconda3/envs/rstudio/lib/R/library")
library(dplyr) # for functions
read_fst(
path,
columns = NULL,
from = 1,
to = NULL,
as.data.table = FALSE,
old_format = FALSE
)
library(dplyr) # for functions
library(dplyr) # for functions
read_fst('late_shipments.fst')
read_fst('late_shipments.fst')
data("ToothGrowth")
head(ToothGrowth)
str(ToothGrowth)
hist(ToothGrowth$len)
shapiro.test(ToothGrowth$len) #data are normally distributed
library(ggplot2)
qplot(supp,len,data=ToothGrowth,
main="Tooth growth of guinea pigs",xlab="Supplement type", ylab="Tooth length") + geom_boxplot(aes(fill = supp))
install.packages('ggplot2', dep = TRUE),
library(ggplot2)
qplot(supp,len,data=ToothGrowth,
main="Tooth growth of guinea pigs",xlab="Supplement type", ylab="Tooth length") + geom_boxplot(aes(fill = supp))
install.packages('ggplot2', dep = TRUE),
library(ggplot2)
install.packages('ggplot2', dep = TRUE)
install.packages("ggplot2", dep = TRUE)
library(ggplot2)
install.packages('ggplot2')
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
install.packages("ggplot2", dependencies=TRUE, type="source")
View(ToothGrowth)
install.packages("ggplot2", dependencies=TRUE)
install.packages('ggplot2')
library(ggplot2)
data("ToothGrowth")
head(ToothGrowth)
str(ToothGrowth)
hist(ToothGrowth$len)
# Shapiro-Wilk normality test
#H0: data are normally distributed
shapiro.test(ToothGrowth$len) #data are normally distributed
library(ggplot2)
qplot(supp,len,data=ToothGrowth,
main="Tooth growth of guinea pigs",xlab="Supplement type", ylab="Tooth length") + geom_boxplot(aes(fill = supp))
View(ToothGrowth)
shapiro.test(ToothGrowth$len)
mean(ToothGrowth$len)
t.test(ToothGrowth$len,mu=18)
### one sided t-test
### test if the mean value is equal to a certain number
### H0: true value of mean=18
t.test(ToothGrowth$len,mu=10)
### one sided t-test
### test if the mean value is equal to a certain number
### H0: true value of mean=18
t.test(ToothGrowth$len,mu=18)
install.packages("dplyr")
install.packages("fst")
# Read an FST file
late_shipments <- read_fst("late_shipments.fst")
library(dplyr) # for functions
library(fst)
# Read an FST file
late_shipments <- read_fst("late_shipments.fst")
# Read an FST file
late_shipments <- read_fst("/Users/sclau/Documents/01-upskill/DataCamp/datacamp-notes/Statistics Fundamentals with R.fst")
OJ = ToothGrowth$len[ToothGrowth$supp == 'OJ']
VC = ToothGrowth$len[ToothGrowth$supp == 'VC']
t.test(OJ, VC,
paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(OJ, VC,alternative = "greater",paired = FALSE)
late_shipments <- read_csv("/Telecom_Customer_Churn/telecom_customer_churn.csv")
install.pakkages("tidyverse")
install.packages("tidyverse")
# Read an FST file
customer_churn <- read_csv("/Telecom_Customer_Churn/telecom_customer_churn.csv")
# Read an FST file
customer_churn <- read.csv("/Telecom_Customer_Churn/telecom_customer_churn.csv")
# Read an FST file
customer_churn <- read.csv("Telecom_Customer_Churn/telecom_customer_churn.csv")
# Read an FST file
customer_churn <- read.csv("telecom_customer_churn.csv")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(dplyr) # for functions
library(tidyverse)
# Read an FST file
customer_churn <- read.csv("telecom_customer_churn.csv")
# Read an FST file
customer_churn <- read.csv("telecom_customer_churn")
# Read an FST file
customer_churn <- read.csv("C:\Users\sclau\Documents\01-upskill\DataCamp\datacamp-notes\Statistics Fundamentals with R\telecom_customer_churn")
# Read an FST file
customer_churn <- read.csv("\Users\sclau\Documents\01-upskill\DataCamp\datacamp-notes\Statistics Fundamentals with R\telecom_customer_churn")
# Read an FST file
customer_churn <- read.csv("C:/Users/sclau/Documents/01-upskill/DataCamp/datacamp-notes/Statistics Fundamentals with R/telecom_customer_churn.csv")
#Ho: The mean Total Revenue is the same for those that Churned and those that Stayed
#Ha: The mean Total Revenue is greater for those that Stayed and those that Churned
#HO:  MuStayed = MuChurned
#Ha:  MuStayed > MuChurned
install.packages("dplyr")
install.packages("tidyverse")
library(dplyr) # for functions
library(tidyverse)
# Read the customer churn csv file
customer_churn <- read.csv("telecom_customer_churn.csv")
# Install packages
install.packages("dplyr")
install.packages("tidyverse")
install.packages("ggplot2")
library(tidyverse) # for data tidying
sp500 <- read.csv("S&P 500 Stock Prices 2014-2017.csv")
wd <- getwd()
setwd(wd)
# Mean and Median
# Read the S&P 500 csv file
sp500 <- read.csv("S&P 500 Stock Prices 2014-2017.csv")
install.packages("tidyverse")
install.packages("dplyr")
install.packages("ggplot2")
library(tidyverse) # for data tidying
library(dplyr) # for tabular data manipulation
library(ggplot2) # for visualization
wd <- getwd()
setwd(wd)
wd <- getwd()
# Install packages
install.packages("dplyr")
library(dplyr) # for tabular data manipulation
wd <- getwd()
setwd("C:/Users/sclau/Documents/r-stats-programming-workshop/1-r-data-manipulation/2-dplyr-data-joining/01-joining-tables")
# In many real-world scenarios, data is spread across multiple tables or datasets.
# Inner joins enables you to merge these tables by matching related records, creating a unified view of the data.
# This integration is crucial for performing comprehensive analysis and gaining insights from the combined information.
# Read the order. order_detail, pizza, and pizza_detail csv files
order <- read.csv("Pizza+Place+Sales/pizza_sales/orders.csv")
order_detail <- read.csv("Pizza+Place+Sales/pizza_sales/order_details.csv")
pizza <- read.csv("Pizza+Place+Sales/pizza_sales/pizzas.csv")
pizza_type <- read.csv("Pizza+Place+Sales/pizza_sales/pizza_types.csv")
view(order)
library(dplyr)
view(order)
glimpse(order)
glimpse(order_detail)
glimpse(pizza)
glimpse(pizza_type)
View(order)
View(order_detail)
# Add the correct verb, table, and joining column
order %>%
inner_join(order_detail, by = c('order_id' = 'order_id'))
# Use the suffix argument to replace .x and .y suffixes
order %>%
inner_join(order_detail, by = c('order_id' = 'order_id'), suffix = c("_part", "_category"))
# Add the correct verb, table, and joining column
order_and_details <- order %>%
inner_join(order_detail, by = c('order_id' = 'order_id'))
ordered_pizzas <- order_and_details %>%
inner_join(pizza, by = "pizza_id")
print(order_and_details)
print(ordered_pizzas)
pizza_orders <- pizza %>%
inner_join(order_and_details, by = "pizza_id")
print(pizza_orders)
View(pizza_orders)
View(ordered_pizzas)
order %>%
# Add order details using an inner join
inner_join(order_detail, by = 'order_id') %>%
# Add pizzas using an inner join
inner_join(pizza, by = pizza_id) %>%
# Add pizza types using an inner join
inner_join(pizza_type, by = pizza_type_id)
View(pizza)
View(order_detail)
order %>%
# Add order details using an inner join
inner_join(order_detail, by = 'order_id') %>%
# Add pizzas using an inner join
inner_join(pizza, by = 'pizza_id') %>%
# Add pizza types using an inner join
inner_join(pizza_type, by = 'pizza_type_id')
ordered_pizza_types <- order %>%
# Add order details using an inner join
inner_join(order_detail, by = 'order_id') %>%
# Add pizzas using an inner join
inner_join(pizza, by = 'pizza_id') %>%
# Add pizza types using an inner join
inner_join(pizza_type, by = 'pizza_type_id')
print(ordered_pizza_types)
View(ordered_pizza_types)
ordered_pizza_types <- order %>%
# Add order details using an inner join
inner_join(order_detail, by = 'order_id') %>%
# Add pizzas using an inner join
inner_join(pizza, by = 'pizza_id') %>%
# Add pizza types using an inner join
inner_join(pizza_type, by = 'pizza_type_id')
# Count the number or pizza types and sort
count(pizza_type, sort=TRUE)
print(ordered_pizza_types)
order %>%
# Add order details using an inner join
inner_join(order_detail, by = 'order_id') %>%
# Add pizzas using an inner join
inner_join(pizza, by = 'pizza_id') %>%
# Add pizza types using an inner join
inner_join(pizza_type, by = 'pizza_type_id')
# Count the number or pizza types and sort
count(pizza_type, sort=TRUE)
View(ordered_pizza_types)
order %>%
# Add order details using an inner join
inner_join(order_detail, by = 'order_id') %>%
# Add pizzas using an inner join
inner_join(pizza, by = 'pizza_id') %>%
# Add pizza types using an inner join
inner_join(pizza_type, by = 'pizza_type_id')
# Count the number or pizza types and sort
count(name, sort=TRUE)
order %>%
# Add order details using an inner join
inner_join(order_detail, by = 'order_id') %>%
# Add pizzas using an inner join
inner_join(pizza, by = 'pizza_id') %>%
# Add pizza types using an inner join
inner_join(pizza_type, by = 'pizza_type_id')
# Count the number or pizza types and sort
count(name, sort=TRUE)
order %>%
# Add order details using an inner join
inner_join(order_detail, by = 'order_id') %>%
# Add pizzas using an inner join
inner_join(pizza, by = 'pizza_id') %>%
# Add pizza types using an inner join
inner_join(pizza_type, by = 'pizza_type_id') %>%
# Count the number or pizza types and sort
count(name, sort=TRUE)
# Add the correct verb, table, and joining column
order_and_details_l <- order %>%
left_join(order_detail, by = c('order_id' = 'order_id'))
View(order_and_details_l)
View(order_and_details)
# Add the correct verb, table, and joining column
order_and_details <- order %>%
inner_join(order_detail, by = c('order_id' = 'order_id'))
# Add the correct verb, table, and joining column
order_and_details <- order %>%
inner_join(order_detail, by = c('order_id' = 'order_id'))
order <- read.csv("Pizza+Place+Sales/pizza_sales/orders.csv")
order_detail <- read.csv("Pizza+Place+Sales/pizza_sales/order_details.csv")
pizza <- read.csv("Pizza+Place+Sales/pizza_sales/pizzas.csv")
pizza_type <- read.csv("Pizza+Place+Sales/pizza_sales/pizza_types.csv")
glimpse(order)
glimpse(order_detail)
glimpse(pizza)
glimpse(pizza_type)
# Add the correct verb, table, and joining column
order_and_details_l <- order %>%
left_join(order_detail, by = c('order_id' = 'order_id'))
setwd("C:/Users/sclau/Documents/r-stats-programming-workshop/1-r-data-manipulation/2-dplyr-data-joining/01-joining-tables")
# INNER JOIN
# In many real-world scenarios, data is spread across multiple tables or datasets.
# Inner joins enables you to merge these tables by matching related records, creating a unified view of the data.
# This integration is crucial for performing comprehensive analysis and gaining insights from the combined information.
# Read the order. order_detail, pizza, and pizza_detail csv files
order <- read.csv("Pizza+Place+Sales/pizza_sales/orders.csv")
order_detail <- read.csv("Pizza+Place+Sales/pizza_sales/order_details.csv")
pizza <- read.csv("Pizza+Place+Sales/pizza_sales/pizzas.csv")
pizza_type <- read.csv("Pizza+Place+Sales/pizza_sales/pizza_types.csv")
glimpse(order)
glimpse(order_detail)
glimpse(pizza)
glimpse(pizza_type)
# Add the correct verb, table, and joining column
order_and_details <- order %>%
inner_join(order_detail, by = c('order_id' = 'order_id'))
# Read the order. order_detail, pizza, and pizza_detail csv files
order <- read.csv("Pizza+Place+Sales/pizza_sales/orders.csv")
order_detail <- read.csv("Pizza+Place+Sales/pizza_sales/order_details.csv")
pizza <- read.csv("Pizza+Place+Sales/pizza_sales/pizzas.csv")
pizza_type <- read.csv("Pizza+Place+Sales/pizza_sales/pizza_types.csv")
glimpse(order)
glimpse(order_detail)
glimpse(pizza)
glimpse(pizza_type)
setwd("C:/Users/sclau/Documents/r-stats-programming-workshop/1-r-data-manipulation/2-dplyr-data-joining/01-joining-tables")
# Read the order. order_detail, pizza, and pizza_detail csv files
order <- read.csv("Pizza+Place+Sales/pizza_sales/orders.csv")
order_detail <- read.csv("Pizza+Place+Sales/pizza_sales/order_details.csv")
pizza <- read.csv("Pizza+Place+Sales/pizza_sales/pizzas.csv")
pizza_type <- read.csv("Pizza+Place+Sales/pizza_sales/pizza_types.csv")
