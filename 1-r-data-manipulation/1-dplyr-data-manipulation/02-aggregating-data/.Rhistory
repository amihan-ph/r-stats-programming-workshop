# What is the mean and median distance by Gender?
airline_statisfaction %>%
# Group and summarize to find the total distance
group_by(Gender, Customer.Type) %>%
summarize(total_distance = sum(Flight.Distance))
# What is the mean and median distance by Gender?
airline_statisfaction %>%
# Group and summarize to find the total distance
group_by(Gender, Customer.Type) %>%
summarize(total_distance = sum(Flight.Distance)) %>%
# Calculate the average_distance and median_distance columns
summarize(average_distance = mean(total_distance),
median_distance = median(total_distance))
# What is the total flight distance by Gender and Customer Type?
airline_statisfaction %>%
# Group and summarize to find the total distance
group_by(Gender, Customer.Type) %>%
summarize(total_distance = sum(Flight.Distance))
# What is the mean and median distance by Gender?
airline_statisfaction %>%
# Group and summarize to find the total distance
group_by(Gender, Customer.Type) %>%
summarize(total_distance = sum(Flight.Distance)) %>%
# Calculate the average_distance and median_distance columns
summarize(average_distance = mean(total_distance),
median_distance = median(total_distance))
airline_statisfaction %>%
# Group and summarize to find the total distance
group_by(Class, Type.of.Travel) %>%
summarize(total_distance = sum(Flight.Distance)) %>%
# Calculate the average_distance and median_distance columns
summarize(average_distance = mean(total_distance),
median_distance = median(total_distance))
airline_statisfaction %>%
# Group and summarize to find the total distance
group_by(Class, Type.of.Travel) %>%
summarize(total_distance = sum(Flight.Distance))
airline_statisfaction %>%
# Group and summarize to find the total distance
group_by(Class, Type.of.Travel) %>%
summarize(total_distance = sum(Flight.Distance)) %>%
# Calculate the average_distance and median_distance columns
summarize(average_distance = mean(total_distance),
median_distance = median(total_distance))
airline_statisfaction %>%
# Group by class
group_by(Class) %>%
# Find the class with the highest online boarding satisfaction
slice_max(Online.Boarding, n = 1)
# What is the highest ease of online booking satisfaction per class?
airline_statisfaction %>%
# Group by class
group_by(Class) %>%
# Find the class with the highestease of online booking satisfaction
slice_max(Ease.of.Online.Booking, n = 1)
# What is the highest ease of online booking satisfaction per class?
airline_statisfaction %>%
# Group by class
group_by(Gender) %>%
# Find the class with the highestease of online booking satisfaction
slice_max(Ease.of.Online.Booking, n = 1)
airline_statisfaction %>%
# Group by class
group_by(Customer.Type) %>%
# Find the class with the highest ease of online booking satisfaction
slice_max(Ease.of.Online.Booking, n = 1)
# What is the highest ease of online booking satisfaction per customer type?
airline_statisfaction %>%
# Group by class
group_by(Customer.Type) %>%
# Find the class with the highest ease of online booking satisfaction
slice_max(Ease.of.Online.Booking, n = 2)
# What is the highest ease of online booking satisfaction per customer type?
airline_statisfaction %>%
# Group by class
group_by(Customer.Type) %>%
# Find the class with the highest ease of online booking satisfaction
slice_max(Ease.of.Online.Booking, n = 5)
# What is the highest ease of online booking satisfaction per customer type?
airline_statisfaction %>%
# Group by class
group_by(Customer.Type) %>%
# Find the class with the highest ease of online booking satisfaction
slice_max(Ease.of.Online.Booking, n = 1)
# What is the total flight distance by Class and Type of Travel?
airline_statisfaction %>%
# Group and summarize to find the total distance
group_by(Class, Type.of.Travel) %>%
summarize(total_distance = sum(Flight.Distance))
airline_statisfaction %>%
group_by(Class) %>%
summarize(ave_fad = sum(Food.and.Drink),
ave_bh = sum(Baggage.Handling),
ave_sc = sum(Seat.Comfort),
ave_lrs = sum(Leg.Room.Service),) %>%
# Add a ave_sat column
mutate(ave_sat = (ave_fad + ave_bh + ave_sc + ave_lrs)/4) %>%
# Sort by average satisfaction in descending order
arrange(desc(ave_sat))
# What is the highest ease of online booking satisfaction per customer type?
airline_statisfaction %>%
# Group by class
group_by(Customer.Type) %>%
# Find the class with the highest ease of online booking satisfaction
slice_max(Ease.of.Online.Booking, n = 1)
airline_statisfaction %>%
# Group by class
group_by(Class) %>%
# Find the class with the highest ease of online booking satisfaction
slice_max(Ease.of.Online.Booking, n = 1)
# What is the highest ease of online booking satisfaction per customer type?
airline_statisfaction %>%
# Group by class
group_by(Customer.Type) %>%
# Find the class with the highest ease of online booking satisfaction
slice_max(Ease.of.Online.Booking, n = 1)
airline_statisfaction %>%
# Group by class
group_by(Customer.Type) %>%
# Find the class with the highest ease of online booking satisfaction
slice_max(Flight.Distance, n = 1)
# What is the longest flight distance per customer type?
airline_statisfaction %>%
# Group by class
group_by(Customer.Type) %>%
# Find the class with the highest ease of online booking satisfaction
slice_max(Flight.Distance, n = 3)
# What is the longest flight distance per customer type?
airline_statisfaction %>%
# Group by class
group_by(Departure.Delay) %>%
# Find the class with the highest ease of online booking satisfaction
slice_max(Flight.Distance, n = 3)
# What is the longest flight distance per customer type?
airline_statisfaction %>%
filter(Departure.Delay > 0) %>%
# Group by class
group_by(Departure.Delay) %>%
# Find the class with the highest ease of online booking satisfaction
slice_max(Flight.Distance, n = 3)
# What is the longest flight distance per customer type?
airline_statisfaction %>%
filter(Departure.Delay > 0) %>%
# Group by class
group_by(Departure.Delay) %>%
# Find the class with the highest ease of online booking satisfaction
slice_max(Flight.Distance, n = 2)
# What is the longest flight distance per customer type?
airline_statisfaction %>%
filter(Departure.Delay > 0) %>%
arrange(desc(Departure.Delay))
# Group by class
group_by(Departure.Delay) %>%
# Find the class with the highest ease of online booking satisfaction
slice_max(Flight.Distance, n = 2)
# you specified to show for a certain group
# What is the longest flight distance per customer type?
airline_statisfaction %>%
filter(Departure.Delay > 0) %>%
# Group by class
group_by(Departure.Delay) %>%
# Find the class with the highest ease of online booking satisfaction
slice_max(Flight.Distance, n = 2)
airline_statisfaction %>%
# Group by class
group_by(Age) %>%
# Find the class with the highest ease of online booking satisfaction
slice_max(Flight.Distance, n = 2)
airline_statisfaction %>%
# Group by class
group_by(Age) %>%
arrange(desc(age))
airline_statisfaction %>%
# Group by class
group_by(Age) %>%
arrange(desc(Age))
# Find the class with the highest ease of online booking satisfaction
slice_max(Flight.Distance, n = 2)
# What is the longest flight distance per customer type?
airline_statisfaction %>%
arrange(desc(Age))
# Group by class
group_by(Age) %>%
# Find the class with the highest ease of online booking satisfaction
slice_max(Flight.Distance, n = 2)
# What is the longest flight distance per customer type?
airline_statisfaction %>%
arrange(desc(Age)) %>%
# Group by class
group_by(Age) %>%
# Find the class with the highest ease of online booking satisfaction
slice_max(Flight.Distance, n = 2)
airline_statisfaction %>%
# Group by class
group_by(Age) %>%
arrange(desc(Age)) %>%
# Find the class with the highest ease of online booking satisfaction
slice_max(Flight.Distance, n = 2)
airline_statisfaction %>%
arrange(desc(Age))
group_by(Age) %>%
airline_statisfaction %>%
arrange(desc(Age)) %>%
# Group by class
group_by(Age) %>%
# What is the longest flight distance per customer type?
airline_statisfaction %>%
arrange(desc(Age)) %>%
# Group by class
group_by(Age) %>%
# Find the class with the highest ease of online booking satisfaction
slice_max(Flight.Distance, n = 2)
# What is the longest flight distance per customer type?
airline_statisfaction %>%
arrange(desc(Age)) %>%
# Group by class
group_by(Age) %>%
# Find the class with the highest ease of online booking satisfaction
slice_max(Flight.Distance, n = 2)
# What is the longest flight distance per customer type?
highest_distance <- airline_statisfaction %>%
# Group by class
group_by(Age) %>%
# Find the class with the highest ease of online booking satisfaction
slice_max(Flight.Distance, n = 2)
# Display all rows of the result
print(highest_distance)
# Display all rows of the result
print(highest_distance, 50)
highest_distance <- airline_statisfaction %>%
# Group by class
group_by(Age) %>%
# Find the class with the highest ease of online booking satisfaction
slice_max(Flight.Distance, n = 2)
# Display the first 50 rows of the result
print(head(highest_distance, n = 50))
View(highest_distance)
# What is the longest flight distance per customer type?
highest_distance <- airline_statisfaction %>%
# Group by class
group_by(Age) %>%
# Find the class with the highest ease of online booking satisfaction
slice_max(Flight.Distance, n = 2)
print(highest_distance)
View(highest_distance)
highest_distance <- airline_statisfaction %>%
# Group by class
group_by(Age) %>%
# Find the class with the highest ease of online booking satisfaction
slice_max(Flight.Distance, n = 2)
arrange(desc(Age))
# What is the longest flight distance per customer type?
highest_distance <- airline_statisfaction %>%
# Group by class
group_by(Age) %>%
# Find the class with the highest ease of online booking satisfaction
slice_max(Flight.Distance, n = 2) %>%
# Sort by age in descending order
arrange(desc(Age))
print(highest_distance)
airline_statisfaction %>%
group_by(Age, Gender) %>%
# Calculate average income
summarize(average_flight_distance = mean(Flight.Distance)) %>%
# Find the lowest income state in each region
slice_min(average_flight_distance, n = 1)
# What
lowest_distance <- airline_statisfaction %>%
group_by(Age, Gender) %>%
# Calculate average income
summarize(average_flight_distance = mean(Flight.Distance)) %>%
# Find the lowest income state in each region
slice_min(average_flight_distance, n = 1)
# Sort by age in descending order
arrange(desc(Age))
# What
lowest_distance <- airline_statisfaction %>%
group_by(Age, Gender) %>%
# Calculate average income
summarize(average_flight_distance = mean(Flight.Distance)) %>%
# Find the lowest income state in each region
slice_min(average_flight_distance, n = 1) %>%
# Sort by age in descending order
arrange(desc(Age))
View(lowest_distance)
lowest_distance <- airline_statisfaction %>%
group_by(Gender, Age) %>%
# Calculate average income
summarize(average_flight_distance = mean(Flight.Distance)) %>%
# Find the lowest income state in each region
slice_min(average_flight_distance, n = 1) %>%
# Sort by age in descending order
arrange(desc(Age))
airline_statisfaction %>%
group_by(Gender, Age) %>%
# Calculate average income
summarize(average_flight_distance = mean(Flight.Distance)) %>%
# Find the lowest income state in each region
slice_min(average_flight_distance, n = 1) %>%
# Sort by age in descending order
arrange(desc(Age))
# What
airline_statisfaction %>%
group_by(Gender, Age) %>%
# Calculate average income
summarize(average_flight_distance = mean(Flight.Distance)) %>%
# Find the lowest income state in each region
slice_max(average_flight_distance, n = 1) %>%
# Sort by age in descending order
arrange(desc(Age))
airline_statisfaction %>%
group_by(Gender, Age) %>%
# Calculate average income
summarize(average_flight_distance = mean(Flight.Distance)) %>%
# Find the lowest income state in each region
slice_min(average_flight_distance, n = 1) %>%
# Sort by age in descending order
arrange(desc(Age))
airline_statisfaction %>%
# Find the total population for each combination of state and metro
group_by(Gender, Age) %>%
summarize(average_flight_distance = mean(Flight.Distance)) %>%
# Extract the most populated row for each state
slice_max(average_flight_distance, n = 1) %>%
# Count the states with more people in Metro or Nonmetro areas
ungroup() %>%
count(Age)
airline_statisfaction %>%
# Find the total population for each combination of state and metro
group_by(Gender, Age) %>%
summarize(average_flight_distance = mean(Flight.Distance)) %>%
# Extract the most populated row for each state
slice_max(average_flight_distance, n = 1) %>%
# Count the states with more people in Metro or Nonmetro areas
#ungroup() %>%
count(Age)
airline_statisfaction %>%
# Find the total population for each combination of state and metro
group_by(Gender, Age) %>%
summarize(average_flight_distance = mean(Flight.Distance)) %>%
# Extract the most populated row for each state
slice_max(average_flight_distance, n = 1) %>%
# Count the states with more people in Metro or Nonmetro areas
ungroup() %>%
count(Age)
airline_statisfaction %>%
# Find the total population for each combination of gender and age
group_by(Gender, Age) %>%
summarize(average_flight_distance = mean(Flight.Distance)) %>%
# Extract the longest flight disrance by gender
slice_max(average_flight_distance, n = 1) %>%
# Count the gender with long flight distances by age
ungroup() %>%
count(Age)
# At what age is the least average flight distance by gender?
airline_statisfaction %>%
# Find the total population for each combination of gender and age
group_by(Gender, Class) %>%
summarize(average_flight_distance = mean(Flight.Distance)) %>%
# Extract the longest flight disrance by gender
slice_max(average_flight_distance, n = 1) %>%
# Count the gender with long flight distances by age
ungroup() %>%
count(Class)
airline_statisfaction %>%
# Find the total population for each combination of gender and age
group_by(Gender, Class) %>%
summarize(average_flight_distance = mean(Flight.Distance)) %>%
# Extract the longest flight disrance by gender
slice_max(average_flight_distance, n = 1) %>%
# Count the gender with long flight distances by age
#ungroup() %>%
count(Class)
# How many ?
airline_statisfaction %>%
# Find the total population for each combination of gender and age
group_by(Class, Gender) %>%
summarize(average_flight_distance = mean(Flight.Distance)) %>%
# Extract the longest flight disrance by gender
slice_max(average_flight_distance, n = 1) %>%
# Count the gender with long flight distances by age
ungroup() %>%
count(Gender)
airline_statisfaction %>%
# Find the total population for each combination of gender and age
group_by(Class, Gender) %>%
summarize(average_flight_distance = mean(Flight.Distance)) %>%
# Extract the longest flight disrance by gender
slice_max(average_flight_distance, n = 1) %>%
# Count the gender with long flight distances by age
#ungroup() %>%
count(Gender)
airline_statisfaction %>%
# Find the total population for each combination of gender and age
group_by(Class, Gender) %>%
summarize(average_flight_distance = mean(Flight.Distance)) %>%
# Extract the longest flight disrance by gender
slice_max(average_flight_distance, n = 1) %>%
# Count the class with long flight distances in different genders
#ungroup() %>%
count(Gender)
airline_statisfaction %>%
# Find the total population for each combination of gender and age
group_by(Class, Gender) %>%
summarize(average_flight_distance = mean(Flight.Distance)) %>%
# Extract the longest flight disrance by gender
slice_max(average_flight_distance, n = 1) %>%
# Count the class with long flight distances in different genders
ungroup() %>%
count(Gender)
airline_statisfaction %>%
# Find the total population for each combination of gender and age
group_by(Class, Gender) %>%
summarize(total_flight_distance = sum(Flight.Distance)) %>%
# Extract the longest flight disrance by gender
slice_max(total_flight_distance, n = 1) %>%
# Count the class with long flight distances with different genders
ungroup() %>%
count(Gender)
airline_statisfaction %>%
# Find the total population for each combination of gender and age
group_by(Class, Type.of.Travel) %>%
summarize(total_flight_distance = sum(Flight.Distance)) %>%
# Extract the longest flight disrance by gender
slice_max(total_flight_distance, n = 1) %>%
# Count the class with long flight distances with different genders
ungroup() %>%
count(Type.of.Travel)
airline_statisfaction %>%
# Find the total population for each combination of gender and age
group_by(Class, Type.of.Travel) %>%
summarize(total_flight_distance = sum(Flight.Distance)) %>%
# Extract the longest flight disrance by gender
slice_max(total_flight_distance, n = 1) %>%
# Count the class with long flight distances with different genders
#ungroup() %>%
count(Type.of.Travel)
airline_statisfaction %>%
# Find the total population for each combination of gender and age
group_by(Class, Type.of.Travel) %>%
summarize(total_flight_distance = sum(Flight.Distance)) %>%
# Extract the longest flight disrance by gender
slice_max(total_flight_distance, n = 1) %>%
# Count the class with long flight distances with different genders
ungroup() %>%
count(Type.of.Travel)
# How many classes do passengers travel longer for business than personal?
airline_statisfaction %>%
# Find the total glight distance for each combination of class and type of travel
group_by(Class, Type.of.Travel) %>%
summarize(total_flight_distance = sum(Flight.Distance)) %>%
# Extract the longest flight distance for each class
slice_max(total_flight_distance, n = 1) %>%
# Count the class with long flight distances for different types of travel
#ungroup() %>%
count(Type.of.Travel)
airline_statisfaction %>%
# Find the total glight distance for each combination of class and type of travel
group_by(Class, Type.of.Travel) %>%
summarize(total_flight_distance = sum(Flight.Distance)) %>%
# Extract the longest flight distance for each class
slice_max(total_flight_distance, n = 1) %>%
# Count the class with long flight distances for different types of travel
#ungroup() %>%
count(Type.of.Travel)
airline_statisfaction %>%
# Find the total glight distance for each combination of class and type of travel
group_by(Age, Type.of.Travel) %>%
summarize(total_flight_distance = sum(Flight.Distance)) %>%
# Extract the longest flight distance for each class
slice_max(total_flight_distance, n = 1) %>%
# Count the class with long flight distances for different types of travel
ungroup() %>%
count(Type.of.Travel)
airline_statisfaction %>%
# Find the total glight distance for each combination of class and type of travel
group_by(Age, Type.of.Travel) %>%
summarize(total_flight_distance = sum(Flight.Distance)) %>%
# Extract the longest flight distance for each class
slice_max(total_flight_distance, n = 1) %>%
# Count the class with long flight distances for different types of travel
# ungroup() %>%
count(Type.of.Travel)
# How many passengers at a certain  travel longer for business than personal?
airline_statisfaction %>%
# Find the total glight distance for each combination of age and type of travel
group_by(Age, Type.of.Travel) %>%
summarize(total_flight_distance = sum(Flight.Distance)) %>%
# Extract the longest flight distance for each class
slice_max(total_flight_distance, n = 1) %>%
# Count the age with long flight distances for different types of travel
ungroup() %>%
count(Type.of.Travel)
# How many passengers at a certain  travel longer for business than personal?
airline_statisfaction %>%
# Find the total glight distance for each combination of age and type of travel
group_by(Age, Type.of.Travel) %>%
summarize(total_flight_distance = sum(Flight.Distance)) %>%
# Extract the longest flight distance for each class
slice_max(total_flight_distance, n = 1) %>%
# Count the age with long flight distances for different types of travel
#ungroup() %>%
count(Type.of.Travel)
airline_statisfaction %>%
# Find the total glight distance for each combination of age and type of travel
group_by(Age, Type.of.Travel) %>%
summarize(total_flight_distance = sum(Flight.Distance)) %>%
# Extract the longest flight distance for each class
slice_max(total_flight_distance, n = 1) %>%
# Count the age with long flight distances for different types of travel
ungroup() %>%
count(Type.of.Travel)
